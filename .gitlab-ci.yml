image: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest

stages:
  - build
  - release
  - publish

### BEGIN OF TEMPLATES

.build-docker-tpl: &build-docker-tpl
  image: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
  tags:
    - docker
  services:
      - name: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
        alias: docker-dind


### END OF TEMPLATES

# build and optionaly test your image here.
build:
  <<: *build-docker-tpl
  stage: build
  variables:
      DOCKER_HOST: "tcp://docker-dind"
  script:
    - docker build . -t build:latest
  except:
    refs:
      - master@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
      - tags@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
      - /^release-.*/@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
    variables:
      - $SKIP_BUILD_DOCKER

check_author:
  image: docker-registry.linagora.com:5000/lgs-releases/gitlab-integrity-checks:latest
  stage: build
  variables:
    GIT_DEPTH: "1"
  tags:
    - ultralight
  script:
    - check_author.py check "$GITLAB_USER_EMAIL" "$GITLAB_USER_NAME" --no-accents
  except:
    refs:
      - master@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
      - tags@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
      - /^release-.*/@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile

# build and push a new snapshot of your docker image.
snapshot:
  <<: *build-docker-tpl
  stage: release
  variables:
      DOCKER_HOST: "tcp://docker-dind"
      DOCKER_IMAGE_PRIVATE: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-ldap-for-tests"
  script:
    - export DOCKER_TAGS=latest
    - docker login -u ${REGISTRY_USER} -p ${REGISTRY_TOKEN} docker-registry.linagora.com:5000
    - docker build . -t build:latest
    - docker-tag-and-push.sh build:latest ${DOCKER_IMAGE_PRIVATE}
    - docker logout docker-registry.linagora.com:5000
  only:
    - master@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
    - /^release-.*/@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
  except:
    variables:
      - $SKIP_BUILD_DOCKER

docker-release:
  <<: *build-docker-tpl
  stage: release
  variables:
      DOCKER_HOST: "tcp://docker-dind"
      DOCKER_IMAGE_PRIVATE: "docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests"
      DOCKER_IMAGE_PUBLIC: "linagora/linshare-ldap-for-tests"
  script:
    - docker-tag-computing.sh ${CI_COMMIT_TAG} docker-tag-and-push.env
    - docker login -u ${REGISTRY_USER_RELEASE} -p ${REGISTRY_TOKEN_RELEASE} docker-registry.linagora.com:5000
    - docker login -u ${HUB_DOCKER_USER} -p ${HUB_DOCKER_TOKEN}
    - docker build . -t build:latest
    - docker-tag-and-push.sh build:latest ${DOCKER_IMAGE_PRIVATE} ${DOCKER_IMAGE_PUBLIC}
    - docker logout docker-registry.linagora.com:5000
    - docker logout
  only:
    - tags@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
  except:
    variables:
      - $SKIP_BUILD_DOCKER

# push the latest docker tag from the current docker tag, cf last job.
mark-as-latest:
  <<: *build-docker-tpl
  stage: publish
  variables:
      GIT_STRATEGY: none
      DOCKER_HOST: "tcp://docker-dind"
      DOCKER_IMAGE_PRIVATE: "docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests"
      DOCKER_IMAGE_PUBLIC: "linagora/linshare-ldap-for-tests"
  script:
    - docker login -u ${REGISTRY_USER_RELEASE} -p ${REGISTRY_TOKEN_RELEASE} docker-registry.linagora.com:5000
    - docker login -u ${HUB_DOCKER_USER} -p ${HUB_DOCKER_TOKEN}
    - docker-tag-computing.sh ${CI_COMMIT_TAG} docker-tags.env
    - source docker-tags.env
    - docker pull ${DOCKER_IMAGE_PRIVATE}:${DOCKER_TAG}
    - export DOCKER_TAGS=latest
    - docker-tag-and-push.sh ${DOCKER_IMAGE_PRIVATE}:${DOCKER_TAG} ${DOCKER_IMAGE_PRIVATE} ${DOCKER_IMAGE_PUBLIC}
    - docker logout docker-registry.linagora.com:5000
    - docker logout
  when: manual
  only:
    - tags@linagora/lgs/linshare/saas/linshare-ldap-for-tests-dockerfile
